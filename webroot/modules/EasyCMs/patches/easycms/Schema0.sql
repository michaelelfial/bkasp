BEGIN TRANSACTION;

-- BEGIN TABLE DBVERSION

    CREATE TABLE DBVERSION ([VER] INTEGER);
    DELETE FROM DBVERSION;
    INSERT INTO DBVERSION ([VER]) VALUES (0);
    
-- END TABLE DBVERSION

-- BEGIN TABLE EASYCMS_CONFIGURATION

    CREATE TABLE EASYCMS_CONFIGURATION (
        ID 						INTEGER NOT NULL DEFAULT 1, -- Not really ID
        SMTP_SERVER 			TEXT DEFAULT 'localhost',
        SMTP_FROM_EMAIL 		TEXT,
        SMTP_PORT 				INTEGER DEFAULT 25,
        SMTP_LOGIN 				TEXT,
        SMTP_PASS 				TEXT,
        DEFAULT_GROUP_ID 		INTEGER, -- new users register with this group
        REGISTRATION_DISABLED 	BOOLEAN DEFAULT 0
    );
   -- Initial configuration (on database creation only)
   INSERT INTO CONFIGURATION (ID) VALUES (1);
   
-- END TABLE EASYCMS_CONFIGURATION

-- BEGIN TABLE EASYCMS_USER
	CREATE TABLE EASYCMS_USER (
      [ID] 					INTEGER PRIMARY KEY ,
      
      [USER_IDENT] 			TEXT UNIQUE ON CONFLICT FAIL, -- From external login (usually unique email)
      [LEVEL] 				INTEGER DEFAULT 1,	-- Level of access - admin, regular user
      [EMAIL] 				TEXT UNIQUE ON CONFLICT FAIL, -- Do we need this in our scenario?
      [GROUP_ID] 			INTEGER,
      [PERSON_ID] 			INTEGER,
      [DELETED] 			BOOLEAN DEFAULT 0,
      [LANGUAGE] 			TEXT, -- Selected language
      [COMMENT] 			TEXT -- Text usually filled during the initial registration
   );
   
   CREATE INDEX EASYCMS_USER_IDX_IDENT ON 		EASYCMS_USER(USER_IDENT);
   CREATE INDEX EASYCMS_USER_IDX_EMAIL ON 		EASYCMS_USER(EMAIL);
   CREATE INDEX EASYCMS_USER_IDX_GROUP_ID ON 	EASYCMS_USER(GROUP_ID);
   CREATE INDEX EASYCMS_USER_IDX_PERSON_ID ON 	EASYCMS_USER(PERSON_ID);
   CREATE INDEX EASYCMS_USER_IDX_DELETED ON 	EASYCMS_USER(DELETED);
   CREATE INDEX EASYCMS_USER_IDX_LANGUAGE ON 	EASYCMS_USER(LANGUAGE); -- Well this is not important except for reports
   
-- END TABLE EASYCMS_USER   

-- BEGIN EASYCMS_USER_ACCESSDEFAULTS
-- Specifies the default access flags for new entries created by the user, fallback to group, in-code
   
    CREATE TABLE EASYCMS_USER_ACCESSDEFAULTS (
		USER_ID 		INTEGER NOT NULL UNIQUE ON CONFLICT REPLACE,
		R_USER 			INTEGER DEFAULT 31,
		R_GROUP 		INTEGER DEFAULT 3,
		R_ALL 			INTEGER DEFAULT 1
    );
	
-- END EASYCMS_USER_ACCESSDEFAULTS

-- BEGIN EASYCMS_USER_RIGHTS

	CREATE TABLE EASYCMS_USER_RIGHTS ( 
		  USER_ID 			INTEGER NOT NULL UNIQUE ON CONFLICT REPLACE,
		  -- MESSAGING
		  MESSAGES              BOOLEAN DEFAULT -1, -- Has private messages mail box
		  MAILALL               BOOLEAN DEFAULT  0, -- Can send private messages to admins only or reply
		  -- RIGHTS
		  RUSER                 BOOLEAN DEFAULT -1,
		  RGROUP                BOOLEAN DEFAULT 0, 	-- Allow the user to edit these rights
		  RALL                  BOOLEAN DEFAULT 0,
		  -- CONTENT
		  IMAGES                BOOLEAN DEFAULT -1, -- Can upload images
		  FILES                 BOOLEAN DEFAULT -1, -- Can upload files
		  ARTICLE               BOOLEAN DEFAULT 0,
		  [COMMENT]             BOOLEAN DEFAULT 0,
		  PERSON                BOOLEAN DEFAULT 0, -- can add persons
		  CATEGORY              BOOLEAN DEFAULT 0, -- edit tree-form nomenclatures
		  NOMENCLATURE          BOOLEAN DEFAULT 0  -- edit linear nomenclatures
	);
		   
-- END EASYCMS_USER_RIGHTS		   

-- BEGIN TABLE EASYCMS_USER_QUOTAS

	CREATE TABLE EASYCMS_USER_QUOTAS ( 
        USER_ID INTEGER NOT NULL UNIQUE ON CONFLICT REPLACE,
        MESSAGE       		LONG DEFAULT 0, -- Maximum number of messages
        IMAGE         		LONG DEFAULT 0, -- Maximum number of images
        FILE          		LONG DEFAULT 0, -- max files
        PERSON        		LONG DEFAULT 0, -- max persons
        ARTICLE       		LONG DEFAULT 0, -- max articles
        [COMMENT]       	LONG DEFAULT 0, -- max coments
        CATEGORY      		LONG DEFAULT 0, -- max category entries
		NOMENCLATURE		LONG DEFAULT 0	-- max nomenclature entries
              
    );
	
-- END TABLE EASYCMS_USER_QUOTAS	

-- BEGIN TABLE EASYCMS_GROUP
	
	CREATE TABLE EASYCMS_GROUP (
        [ID] 			INTEGER PRIMARY KEY,
        [NAME] 			TEXT,
        [CODE] 			TEXT,
        [DESCRIPTION] 	TEXT,
        [DELETED] 		BOOLEAN DEFAULT 0,
        [CANLOGIN] 		BOOLEAN DEFAULT 0
    );
    
    CREATE INDEX EASYCMS_GROUP_IDX_NAME ON 		EASYCMS_GROUP(NAME);
    CREATE INDEX EASYCMS_GROUP_IDX_CODE ON 		EASYCMS_GROUP(CODE);
    CREATE INDEX EASYCMS_GROUP_IDX_DELETED ON 	EASYCMS_GROUP(DELETED);
    CREATE INDEX EASYCMS_GROUP_IDX_CANLOGIN ON 	EASYCMS_GROUP(CANLOGIN);
	
-- END TABLE EASYCMS_GROUP

-- BEGIN TABLE EASYCMS_GROUP_ACCESSDEFAULTS

	CREATE TABLE EASYCMS_GROUP_ACCESSDEFAULTS (
        GROUP_ID 	INTEGER NOT NULL UNIQUE ON CONFLICT REPLACE,
        R_USER 		INTEGER DEFAULT 31,
        R_GROUP 	INTEGER DEFAULT 3,
        R_ALL 		INTEGER DEFAULT 1
    );
	
-- END TABLE EASYCMS_GROUP_ACCESSDEFAULTS	


-- BEGIN EASYCMS_GROUP_RIGHTS

	CREATE TABLE EASYCMS_GROUP_RIGHTS ( 
		  GROUP_ID 			INTEGER NOT NULL UNIQUE ON CONFLICT REPLACE,
		  -- MESSAGING
		  MESSAGES              BOOLEAN DEFAULT -1, -- Has private messages mail box
		  MAILALL               BOOLEAN DEFAULT  0, -- Can send private messages to admins only or reply
		  -- RIGHTS
		  RUSER                 BOOLEAN DEFAULT -1,
		  RGROUP                BOOLEAN DEFAULT 0, 	-- Allow the user to edit these rights
		  RALL                  BOOLEAN DEFAULT 0,
		  -- CONTENT
		  IMAGES                BOOLEAN DEFAULT -1, -- Can upload images
		  FILES                 BOOLEAN DEFAULT -1, -- Can upload files
		  ARTICLE               BOOLEAN DEFAULT 0,
		  [COMMENT]             BOOLEAN DEFAULT 0,
		  PERSON                BOOLEAN DEFAULT 0, -- can add persons
		  CATEGORY              BOOLEAN DEFAULT 0, -- edit tree-form nomenclatures
		  NOMENCLATURE          BOOLEAN DEFAULT 0  -- edit linear nomenclatures
	);
		   
-- END EASYCMS_GROUP_RIGHTS

-- BEGIN TABLE EASYCMS_GROUP_QUOTAS

	CREATE TABLE EASYCMS_GROUP_QUOTAS ( 
        GROUP_ID INTEGER NOT NULL UNIQUE ON CONFLICT REPLACE,
        MESSAGE       		LONG DEFAULT 0, -- Maximum number of messages
        IMAGE         		LONG DEFAULT 0, -- Maximum number of images
        FILE          		LONG DEFAULT 0, -- max files
        PERSON        		LONG DEFAULT 0, -- max persons
        ARTICLE       		LONG DEFAULT 0, -- max articles
        [COMMENT]       	LONG DEFAULT 0, -- max coments
        CATEGORY      		LONG DEFAULT 0, -- max category entries
		NOMENCLATURE		LONG DEFAULT 0	-- max nomenclature entries
              
    );
	
-- END TABLE EASYCMS_GROUP_QUOTAS

-- BEGIN INIT ON NEW DB
	INSERT INTO EASYCMS_GROUP (ID,NAME,DESCRIPTION,CODE,CANLOGIN) VALUES (1,'Administrators','Application administrators','ADMINS',-1);
    INSERT INTO EASYCMS_USER (ID,USER_IDENT,LEVEL,EMAIL,GROUP_ID,PERSON_SID) VALUES
                       (1,'root"cleancodefactory.de',100,'root@localhost',1,NULL);
-- END INIT


-- BEGIN TABLE EASYCMS_PERSON
    CREATE TABLE EASYCMS_PERSON (
        [ID] 				INTEGER PRIMARY KEY,
        [CREATED] 			DATETIME,
        [MODIFIED] 			DATETIME,
        [MODIFY_USER_ID] 	INTEGER,
        [OWNER_USER_ID] 	INTEGER,
        [OWNER_GROUP_ID] 	INTEGER,
        [R_USER] 			INTEGER DEFAULT 7,
        [R_GROUP] 			INTEGER DEFAULT 3,
        [R_ALL] 			INTEGER DEFAULT 1,
        [DELETED] 			BOOLEAN DEFAULT 0,
        
        [ISENTITY] 			BOOLEAN DEFAULT -1, -- If true NAME1 is used only (UI can ignore that)
        [NAME1] 			TEXT,
        [NAME2] 			TEXT,
        [NAME3] 			TEXT,
        [TITLE] 			TEXT,
        [CONTENT_FORMAT] 	TEXT DEFAULT 'plain',
        [COMMENT] 			TEXT,
        [KEYWORDS] 			TEXT,
        [NUM] 				TEXT, -- Personal number (EGN etc.)
        [BORN] 				DATETIME, -- Date born
        [ALLOW_MAIL] 		BOOLEAN DEFAULT 0, -- Allow the user to be mailed from the site and make the information public (if permitted otherwise)
        [IMAGE_ID] 			INTEGER,        
        [FILE_ID] 			INTEGER,        
		-- Integrated contacts for implementations that wont bother to maintain separate table
        [EMAIL] 			TEXT,
        [PHONE] 			TEXT,
        [WEBSITE] 			TEXT,
        [ADDRESS] 			TEXT
    );

    CREATE INDEX EASYCMS_PERSON_IDX_CREATED ON 			EASYCMS_PERSON(CREATED);
    CREATE INDEX EASYCMS_PERSON_IDX_MODIFIED ON 		EASYCMS_PERSON(MODIFIED);
    CREATE INDEX EASYCMS_PERSON_IDX_MODIFY_USER_ID ON 	EASYCMS_PERSON(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_PERSON_IDX_OWNER_USER_ID ON 	EASYCMS_PERSON(OWNER_USER_ID);
    CREATE INDEX EASYCMS_PERSON_IDX_OWNER_GROUP_ID ON 	EASYCMS_PERSON(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_PERSON_IDX_R_USER ON 			EASYCMS_PERSON(R_USER);
    CREATE INDEX EASYCMS_PERSON_IDX_R_GROUP ON 			EASYCMS_PERSON(R_GROUP);
    CREATE INDEX EASYCMS_PERSON_IDX_R_ALL ON 			EASYCMS_PERSON(R_ALL);
    CREATE INDEX EASYCMS_PERSON_IDX_DELETED ON 			EASYCMS_PERSON(DELETED);
    
    
    CREATE INDEX EASYCMS_PERSON_IDX_NAME1 ON 		EASYCMS_PERSON(NAME1);
    CREATE INDEX EASYCMS_PERSON_IDX_NAME2 ON 		EASYCMS_PERSON(NAME2);
    CREATE INDEX EASYCMS_PERSON_IDX_NAME3 ON 		EASYCMS_PERSON(NAME3);
    CREATE INDEX EASYCMS_PERSON_IDX_TITLE ON 		EASYCMS_PERSON(TITLE);
    CREATE INDEX EASYCMS_PERSON_IDX_IMAGE_SID ON 	EASYCMS_PERSON(IMAGE_SID);
    CREATE INDEX EASYCMS_PERSON_IDX_FILE_SID ON 	EASYCMS_PERSON(FILE_SID);
    CREATE INDEX EASYCMS_PERSON_IDX_EMAIL ON 		EASYCMS_PERSON(EMAIL);
    CREATE INDEX EASYCMS_PERSON_IDX_PHONE ON 		EASYCMS_PERSON(PHONE);
    CREATE INDEX EASYCMS_PERSON_IDX_WEBSITE ON 		EASYCMS_PERSON(WEBSITE);
	
-- END TABLE EASYCMS_PERSON	

-- BEGIN TABLE EASYCMS_HELP
-- Help pieces to be shown somewhere
    CREATE TABLE EASYCMS_HELP (
        [ID] 				INTEGER PRIMARY KEY,
        [CREATED] 			DATETIME,
        [MODIFIED] 			DATETIME,
        [MODIFY_USER_ID] 	INTEGER,
        [OWNER_USER_ID] 	INTEGER,
        [OWNER_GROUP_ID] 	INTEGER,
        [R_USER] 			INTEGER DEFAULT 7,
        [R_GROUP] 			INTEGER DEFAULT 3,
        [R_ALL] 			INTEGER DEFAULT 1,
        [DELETED] 			BOOLEAN DEFAULT 0,
        
        [CAPTION] 			TEXT,
        [KEYWORDS] 			TEXT,
        [IMAGE_ID] 			INTEGER,
        [BODY] 				TEXT,
        [CONTENT_FORMAT] 	TEXT DEFAULT 'plain',
        [CODE] 				TEXT
    );
    
    CREATE INDEX EASYCMS_HELP_IDX_CREATED ON 			EASYCMS_HELP(CREATED);
    CREATE INDEX EASYCMS_HELP_IDX_MODIFIED ON 			EASYCMS_HELP(MODIFIED);
    CREATE INDEX EASYCMS_HELP_IDX_MODIFY_USER_ID ON 	EASYCMS_HELP(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_HELP_IDX_OWNER_USER_ID ON 		EASYCMS_HELP(OWNER_USER_ID);
    CREATE INDEX EASYCMS_HELP_IDX_OWNER_GROUP_ID ON 	EASYCMS_HELP(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_HELP_IDX_R_USER ON 			EASYCMS_HELP(R_USER);
    CREATE INDEX EASYCMS_HELP_IDX_R_GROUP ON 			EASYCMS_HELP(R_GROUP);
    CREATE INDEX EASYCMS_HELP_IDX_R_ALL ON 				EASYCMS_HELP(R_ALL);
    CREATE INDEX EASYCMS_HELP_IDX_DELETED ON 			EASYCMS_HELP(DELETED);
    
    
    CREATE INDEX EASYCMS_HELP_IDX_CAPTION ON EASYCMS_HELP(CAPTION);
    CREATE INDEX EASYCMS_HELP_IDX_CODE ON EASYCMS_HELP(CODE);

-- END TABLE EASYCMS_HELP

-- BEGIN TABLE EASYCMS_CATEGORY
-- Universal tree nomenclature - subbranches are assigned for different purposes

    CREATE TABLE EASYCMS_CATEGORY (
        [ID] 				INTEGER PRIMARY KEY,
        [CREATED] 			DATETIME,
        [MODIFIED] 			DATETIME,
        [MODIFY_USER_ID] 	INTEGER,
        [OWNER_USER_ID] 	INTEGER,
        [OWNER_GROUP_ID] 	INTEGER,
        [R_USER] 			INTEGER DEFAULT 7,
        [R_GROUP] 			INTEGER DEFAULT 3,
        [R_ALL] 			INTEGER DEFAULT 1,
        [DELETED] 			BOOLEAN DEFAULT 0,
      
        [PARENT_ID] 		INTEGER, -- Parent, can be null. A tree can be started from any point
        [CATEGORY_TYPE] 	TEXT, -- code for the category type - app defined (ARTICLE, BLOG, ITEM, etc.)
        [CODE] 				TEXT, 		-- application code (not used in this table for now)
        [ORDERTAG] 			INTEGER, -- order tag (if not NULL takes precedence before the name)
        [IMAGE_ID] 			INTEGER,
        [CAPTION] 			TEXT,
        [KEYWORDS] 			TEXT,
        [BODY] 				TEXT
    );
    
    CREATE INDEX EASYCMS_CATEGORY_IDX_CREATED ON 		EASYCMS_CATEGORY(CREATED);
    CREATE INDEX EASYCMS_CATEGORY_IDX_MODIFIED ON 		EASYCMS_CATEGORY(MODIFIED);
    CREATE INDEX EASYCMS_CATEGORY_IDX_MODIFY_USER_ID ON EASYCMS_CATEGORY(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_CATEGORY_IDX_OWNER_USER_ID ON 	EASYCMS_CATEGORY(OWNER_USER_ID);
    CREATE INDEX EASYCMS_CATEGORY_IDX_OWNER_GROUP_ID ON EASYCMS_CATEGORY(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_CATEGORY_IDX_R_USER ON 		EASYCMS_CATEGORY(R_USER);
    CREATE INDEX EASYCMS_CATEGORY_IDX_R_GROUP ON 		EASYCMS_CATEGORY(R_GROUP);
    CREATE INDEX EASYCMS_CATEGORY_IDX_R_ALL ON 			EASYCMS_CATEGORY(R_ALL);
    CREATE INDEX EASYCMS_CATEGORY_IDX_DELETED ON 		EASYCMS_CATEGORY(DELETED);
    
    CREATE INDEX EASYCMS_CATEGORY_IDX_PARENT_ID ON 		EASYCMS_CATEGORY(PARENT_ID);
    CREATE INDEX EASYCMS_CATEGORY_IDX_CATEGORY_TYPE ON 	EASYCMS_CATEGORY(CATEGORY_TYPE);
    CREATE INDEX EASYCMS_CATEGORY_IDX_CODE ON 			EASYCMS_CATEGORY(CODE);
    CREATE INDEX EASYCMS_CATEGORY_IDX_IMAGE_ID ON 		EASYCMS_CATEGORY(IMAGE_ID);
    CREATE INDEX EASYCMS_CATEGORY_IDX_CAPTION ON 		EASYCMS_CATEGORY(CAPTION);

	-- TRIGGERS
	-- Clean from categorization all the dropped categories
	CREATE TRIGGER EASYCMS_CATEGORY_TRG_DEL AFTER DELETE ON EASYCMS_CATEGORYCATEGORY
    BEGIN
		DELETE FROM EASYCMS_CATEGORIZE WHERE CATEGORY_ID=OLD.SID;
    END;
	
	
-- END TABLE EASYCMS_CATEGORY	

-- BEGIN TABLE EASYCMS_NOMENCLATURE

	CREATE TABLE EASYCMS_NOMENCLATURE (
      [ID] 				INTEGER PRIMARY KEY,
      [CREATED] 		DATETIME,
      [MODIFIED] 		DATETIME,
      [MODIFY_USER_ID] 	INTEGER,
      [OWNER_USER_ID] 	INTEGER,
      [OWNER_GROUP_ID] 	INTEGER,
      [R_USER] 			INTEGER DEFAULT 7,
      [R_GROUP] 		INTEGER DEFAULT 3,
      [R_ALL] 			INTEGER DEFAULT 3,
      [DELETED] 		BOOLEAN DEFAULT 0,
      
      [CODE] 			TEXT,
	  [NOMENCLATURE]	TEXT, -- Text splitting, these bases are supposed to be small enough
      [CAPTION] 		TEXT,
	  [DESCRIPTION]  	TEXT,
	  [IMAGE_ID]		INTEGER
    );
	
	CREATE INDEX EASYCMS_NOMENCLATURE_IDX_ID ON 		EASYCMS_NOMENCLATURE(ID);
    CREATE INDEX EASYCMS_NOMENCLATURE_CREATED ON 		EASYCMS_NOMENCLATURE(CREATED);
    CREATE INDEX EASYCMS_NOMENCLATURE_MODIFIED ON 		EASYCMS_NOMENCLATURE(MODIFIED);
    CREATE INDEX EASYCMS_NOMENCLATURE_MODIFY_USER_ID ON EASYCMS_NOMENCLATURE(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_NOMENCLATURE_OWNER_USER_ID ON 	EASYCMS_NOMENCLATURE(OWNER_USER_ID);
    CREATE INDEX EASYCMS_NOMENCLATURE_OWNER_GROUP_ID ON EASYCMS_NOMENCLATURE(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_NOMENCLATURE_R_USER ON 		EASYCMS_NOMENCLATURE(R_USER);
    CREATE INDEX EASYCMS_NOMENCLATURE_R_GROUP ON 		EASYCMS_NOMENCLATURE(R_GROUP);
    CREATE INDEX EASYCMS_NOMENCLATURE_R_ALL ON 			EASYCMS_NOMENCLATURE(R_ALL);
    CREATE INDEX EASYCMS_NOMENCLATURE_DELETED ON 		EASYCMS_NOMENCLATURE(DELETED);
    
    
    CREATE INDEX EASYCMS_NOMENCLATURE_IDX_CODE ON 			EASYCMS_NOMENCLATURE(CODE);
    CREATE INDEX EASYCMS_NOMENCLATURE_IDX_CAPTION ON 		EASYCMS_NOMENCLATURE(CAPTION);
	CREATE INDEX EASYCMS_NOMENCLATURE_IDX_NOMENCLATURE ON 	EASYCMS_NOMENCLATURE(NOMENCLATURE);

-- END TABLE EASYCMS_NOMENCLATURE

-- BEGIN TABLE EASYCMS_CATEGORIZE

	CREATE TABLE EASYCMS_CATEGORIZE (
		[OBJECT_ID] 	INTEGER NOT NULL, -- The categorized object
		[CATEGORY_ID] 	INTEGER NOT NULL, -- The category SID
		[ORDER_TAG] 	INTEGER DEFAULT 0, -- Ordering (optionally supported - we can live without it)
		[OBJECT_TYPE] 	TEXT NOT NULL, -- Kind of object being categorized (typically the table of origin)
		UNIQUE(OBJECT_ID, CATEGORY_ID) ON CONFLICT REPLACE
	);
	CREATE INDEX EASYCMS_CATEGORIZE_IDX_OBJECT_TYPE ON 	EASYCMS_CATEGORIZE(OBJECT_TYPE);
    CREATE INDEX EASYCMS_CATEGORIZE_IDX_ORDER_TAG ON 	EASYCMS_CATEGORIZE(ORDER_TAG);
    CREATE INDEX EASYCMS_CATEGORIZE_IDX_OBJECT_SID ON 	EASYCMS_CATEGORIZE(OBJECT_ID);
    CREATE INDEX EASYCMS_CATEGORIZE_IDX_CATEGORY_SID ON EASYCMS_CATEGORIZE(CATEGORY_ID);
	
-- END TABLE EASYCMS_CATEGORIZE

-- BEGIN TABLE EASYCMS_RELATION
-- Despite the assumed direction MAIN --> Attached it can be ignored when not needed.
	CREATE TABLE EASYCMS_RELATION (
        [MAIN_ID] 		INTEGER NOT NULL, -- Attach to this object
        [ATTACHED_ID] 	INTEGER NOT NULL, -- ID of the attached item
        [ORDER_TAG] 	INTEGER DEFAULT 0, -- Order in lists
        [MAIN_TYPE] 	TEXT NOT NULL,   -- Kind of main to which this entry describes an attachment 'IMAGE', 'FILE', etc. 
		[ATTACHED_TYPE] 	TEXT NOT NULL,   -- Kind of attachment 'IMAGE', 'FILE', etc. (should be target_type, but ...)
        UNIQUE(MAIN_ID,ATTACHED_ID) ON CONFLICT REPLACE
    );
    CREATE INDEX EASYCMS_RELATION_IDX_OBJECT_TYPE ON 	EASYCMS_RELATION(MAIN_TYPE);
	CREATE INDEX EASYCMS_RELATION_IDX_ATTACH_TYPE ON 	EASYCMS_RELATION(ATTACHED_TYPE);
    CREATE INDEX EASYCMS_RELATION_IDX_ORDER_TAG ON 		EASYCMS_RELATION(ORDER_TAG);
    CREATE INDEX EASYCMS_RELATION_IDX_MAIN_ID ON 		EASYCMS_RELATION(MAIN_ID);
    CREATE INDEX EASYCMS_RELATION_IDX_ATTACHED_ID ON 	EASYCMS_RELATION(ATTACHED_ID);
	
-- END TABLE EASYCMS_RELATION

-- BEGIN TABLE EASYCMS_IMAGE
    CREATE TABLE EASYCMS_IMAGE (
        [ID] 				INTEGER PRIMARY KEY,
        [CREATED] 			DATETIME,
        [MODIFIED] 			DATETIME,
        [MODIFY_USER_ID] 	INTEGER,
        [OWNER_USER_ID] 	INTEGER,
        [OWNER_GROUP_ID] 	INTEGER,
        [R_USER] 			INTEGER DEFAULT 7,
        [R_GROUP] 			INTEGER DEFAULT 3,
        [R_ALL] 			INTEGER DEFAULT 1,
        [DELETED] 			BOOLEAN DEFAULT 0,
        
        [CAPTION] 			TEXT ,
        [KEYWORDS] 			TEXT ,
        [CONTENT_TYPE] 		TEXT ,
        [WIDTH] 			INTEGER ,
        [HEIGHT] 			INTEGER ,
        [PATH] 				TEXT, -- From certain location the application knows
        [NOMENCLATURE_ID] 	INTEGER,
        [DESCRIPTION] 		TEXT, -- Description
        [LATITUDE] 			DOUBLE,
        [LONGITUDE] 		DOUBLE
    );
    
    CREATE INDEX EASYCMS_IMAGE_IDX_ID ON 				EASYCMS_IMAGE(ID);
    CREATE INDEX EASYCMS_IMAGE_IDX_CREATED ON 			EASYCMS_IMAGE(CREATED);
    CREATE INDEX EASYCMS_IMAGE_IDX_MODIFIED ON 			EASYCMS_IMAGE(MODIFIED);
    CREATE INDEX EASYCMS_IMAGE_IDX_MODIFY_USER_ID ON 	EASYCMS_IMAGE(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_IMAGE_IDX_OWNER_USER_ID ON 	EASYCMS_IMAGE(OWNER_USER_ID);
    CREATE INDEX EASYCMS_IMAGE_IDX_OWNER_GROUP_ID ON 	EASYCMS_IMAGE(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_IMAGE_IDX_R_USER ON 			EASYCMS_IMAGE(R_USER);
    CREATE INDEX EASYCMS_IMAGE_IDX_R_GROUP ON 			EASYCMS_IMAGE(R_GROUP);
    CREATE INDEX EASYCMS_IMAGE_IDX_R_ALL ON 			EASYCMS_IMAGE(R_ALL);
    CREATE INDEX EASYCMS_IMAGE_IDX_DELETED ON 			EASYCMS_IMAGE(DELETED);
    
    
    CREATE INDEX EASYCMS_IMAGE_IDX_NAME ON 				EASYCMS_IMAGE(CAPTION);
    CREATE INDEX EASYCMS_IMAGE_IDX_CONTENT_TYPE ON 		EASYCMS_IMAGE(CONTENT_TYPE);
    CREATE INDEX EASYCMS_IMAGE_IDX_WIDTH ON 			EASYCMS_IMAGE(WIDTH);
    CREATE INDEX EASYCMS_IMAGE_IDX_HEIGHT ON 			EASYCMS_IMAGE(HEIGHT);
    CREATE INDEX EASYCMS_IMAGE_IDX_IMAGE_TYPE_ID ON 	EASYCMS_IMAGE(NOMENCLATURE_ID);
    
    CREATE TRIGGER EASYCMS_IMAGE_TRG_DEL AFTER DELETE ON EASYCMS_IMAGE
    BEGIN
        UPDATE EASYCMS_PERSON SET IMAGE_ID=NULL WHERE IMAGE_ID=OLD.ID;
        UPDATE EASYCMS_HELP SET IMAGE_ID=NULL WHERE IMAGE_ID=OLD.ID;
        UPDATE EASYCMS_CATEGORY SET IMAGE_ID=NULL WHERE IMAGE_ID=OLD.ID;
        UPDATE EASYCMS_ARTICLE SET IMAGE_ID=NULL WHERE IMAGE_ID=OLD.ID;
        DELETE FROM EASYCMS_RELATION WHERE (ATTACHED_ID=OLD.ID AND ATTACHED_TYPE='IMAGE') OR (MAIN_ID=OLD.ID AND MAIN_TYPE='IMAGE');
		DELETE FROM EASYCMS_CATEGORIZE WHERE (OBJECT_ID=OLD.ID AND OBJECT_TYPE='IMAGE');
    END;
	
-- END TABLE EASYCMS_IMAGE    

-- BEGIN TABLE EASYCMS_FILE
	CREATE TABLE EASYCMS_FILE (
		[ID] 				INTEGER PRIMARY KEY,
        [CREATED] 			DATETIME,
        [MODIFIED] 			DATETIME,
        [MODIFY_USER_ID] 	INTEGER,
        [OWNER_USER_ID] 	INTEGER,
        [OWNER_GROUP_ID] 	INTEGER,
        [R_USER] 			INTEGER DEFAULT 7,
        [R_GROUP] 			INTEGER DEFAULT 3,
        [R_ALL] 			INTEGER DEFAULT 1,
        [DELETED] 			BOOLEAN DEFAULT 0,
      
		[SIZE] 				INTEGER, -- size in bytes
		[CONTENT_TYPE] 		TEXT,
		[PATH] 				TEXT,
		[FILE_NAME] 		TEXT,
		[CAPTION] 			TEXT,
		[DESCRIPTION] 		TEXT -- Description
      
    );
    CREATE INDEX EASYCMS_FILE_IDX_LANGUAGE ON EASYCMS_FILE(LANGUAGE);
    CREATE INDEX EASYCMS_FILE_IDX_CREATED ON EASYCMS_FILE(CREATED);
    CREATE INDEX EASYCMS_FILE_IDX_MODIFIED ON EASYCMS_FILE(MODIFIED);
    CREATE INDEX EASYCMS_FILE_IDX_MODIFY_USER_ID ON EASYCMS_FILE(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_FILE_IDX_OWNER_USER_ID ON EASYCMS_FILE(OWNER_USER_ID);
    CREATE INDEX EASYCMS_FILE_IDX_OWNER_GROUP_ID ON EASYCMS_FILE(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_FILE_IDX_R_USER ON EASYCMS_FILE(R_USER);
    CREATE INDEX EASYCMS_FILE_IDX_R_GROUP ON EASYCMS_FILE(R_GROUP);
    CREATE INDEX EASYCMS_FILE_IDX_R_ALL ON EASYCMS_FILE(R_ALL);
    
    CREATE INDEX EASYCMS_FILE_IDX_FILE_NAME ON FILE(FILE_NAME);
    CREATE INDEX EASYCMS_FILE_IDX_SIZE ON FILE(SIZE);
    CREATE INDEX EASYCMS_FILE_IDX_CAPTION ON FILE(CAPTION);
    CREATE INDEX EASYCMS_FILE_IDX_CONTENT_TYPE ON FILE(CONTENT_TYPE);    
    
    CREATE TRIGGER EASYCMS_FILE_TRG_DEL AFTER DELETE ON EASYCMS_FILE
    BEGIN
        DELETE FROM EASYCMS_RELATION WHERE ATTACHED_ID=OLD.ID AND ATTACHED_TYPE='FILE';
		DELETE FROM EASYCMS_RELATION WHERE MAIN_ID=OLD.ID AND MAIN_TYPE='FILE';
		DELETE FROM EASYCMS_CATEGORIZE WHERE (OBJECT_ID=OLD.ID AND OBJECT_TYPE='FILE');
    END;

-- END TABLE EASYCMS_FILE


-- BEGIN TABLE EASYCMS_ARTICLE
    CREATE TABLE EASYCMS_ARTICLE (
        [ID] 				INTEGER PRIMARY KEY,
        [CREATED] 			DATETIME,
        [MODIFIED] 			DATETIME,
        [MODIFY_USER_ID] 	INTEGER,
        [OWNER_USER_ID] 	INTEGER,
        [OWNER_GROUP_ID] 	INTEGER,
        [R_USER] 			INTEGER DEFAULT 7,
        [R_GROUP] 			INTEGER DEFAULT 3,
        [R_ALL] 			INTEGER DEFAULT 1,
        [DELETED] 			BOOLEAN DEFAULT 0,
        
        [CAPTION] 			TEXT,
        [KEYWORDS] 			TEXT,
        [ARTICLE_TYPE] 		TEXT DEFAULT 'ARTICLE', -- code for the category type - app defined (ARTICLE, BLOG, ITEM, etc.)
        [IMAGE_ID] 			INTEGER, -- main image (icon)
        [BODY] 				TEXT,
        [CONTENT_FORMAT] 	TEXT DEFAULT 'plain',
        [CODE] 				TEXT,
        -- These below may or may not be used depending on the components involved
        [ALLOW_COMMENTS] 	BOOLEAN DEFAULT 0,
        [VISIBLE] 			BOOLEAN DEFAULT -1,
        [VIEWTYPE] 			INTEGER DEFAULT 0 -- instructs how to display the article (depends on the application)
    );
    
    CREATE INDEX EASYCMS_ARTICLE_IDX_CREATED ON 			EASYCMS_ARTICLE(CREATED);
    CREATE INDEX EASYCMS_ARTICLE_IDX_MODIFIED ON 			EASYCMS_ARTICLE(MODIFIED);
    CREATE INDEX EASYCMS_ARTICLE_IDX_MODIFY_USER_ID ON 		EASYCMS_ARTICLE(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_ARTICLE_IDX_OWNER_USER_ID ON 		EASYCMS_ARTICLE(OWNER_USER_ID);
    CREATE INDEX EASYCMS_ARTICLE_IDX_OWNER_GROUP_ID ON 		EASYCMS_ARTICLE(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_ARTICLE_IDX_R_USER ON 				EASYCMS_ARTICLE(R_USER);
    CREATE INDEX EASYCMS_ARTICLE_IDX_R_GROUP ON 			EASYCMS_ARTICLE(R_GROUP);
    CREATE INDEX EASYCMS_ARTICLE_IDX_R_ALL ON 				EASYCMS_ARTICLE(R_ALL);
    CREATE INDEX EASYCMS_ARTICLE_IDX_DELETED ON 			EASYCMS_ARTICLE(DELETED);
    
    
    CREATE INDEX EASYCMS_ARTICLE_IDX_CAPTION ON 		EASYCMS_ARTICLE(CAPTION);
    CREATE INDEX EASYCMS_ARTICLE_IDX_CODE ON 			EASYCMS_ARTICLE(CODE);
    CREATE INDEX EASYCMS_ARTICLE_IDX_ALLOW_COMMENTS ON 	EASYCMS_ARTICLE(ALLOW_COMMENTS);
    CREATE INDEX EASYCMS_ARTICLE_IDX_VISIBLE ON 		EASYCMS_ARTICLE(VISIBLE);
    CREATE INDEX EASYCMS_ARTICLE_IDX_VIEWTYPE ON 		EASYCMS_ARTICLE(VIEWTYPE);
	CREATE INDEX EASYCMS_ARTICLE_IDX_ARTICLE_TYPE ON 	EASYCMS_ARTICLE(ARTICLE_TYPE);
    
    
    
    CREATE TRIGGER EASYCMS_ARTICLE_TRG_DEL AFTER DELETE ON EASYCMS_ARTICLE
    BEGIN
        DELETE FROM EASYCMS_RELATION WHERE (MAIN_ID=OLD.ID AND MAIN_TYPE='ARTICLE') OR (ATTACHED_ID=OLD.ID AND ATTACHED_TYPE='ARTICLE');
        DELETE FROM EASYCMS_COMMENT WHERE OBJECT_ID=OLD.ID AND OBJECT_TYPE='ARTICLE';
		DELETE FROM EASYCMS_CATEGORIZE WHERE OBJECT_ID=OLD.ID AND OBJECT_TYPE='ARTICLE';
    END;
	
	
-- END TABLE EASYCMS_ARTICLE

-- BEGIN TABLE EASYCMS_COMMENT
-- Directly related to an object in order to simplify things
    CREATE TABLE EASYCMS_COMMENT (
        [ID] 				INTEGER PRIMARY KEY,
        [CREATED] 			DATETIME,
        [MODIFIED] 			DATETIME,
        [MODIFY_USER_ID] 	INTEGER,
        [OWNER_USER_ID] 	INTEGER,
        [OWNER_GROUP_ID] 	INTEGER,
        [R_USER] 			INTEGER DEFAULT 7,
        [R_GROUP] 			INTEGER DEFAULT 3,
        [R_ALL] 			INTEGER DEFAULT 1,
        [DELETED] 			BOOLEAN DEFAULT 0,
      
        [OBJECT_ID] 		INTEGER, -- the object to which this belongs (comment to)
        [OBJECT_TYPE] 		TEXT NOT NULL,
        [COMMENT_ID] 		INTEGER, -- comment to comment
        [VISIBLE] 			BOOLEAN DEFAULT -1,
        [STICKY] 			BOOLEAN DEFAULT 0,
        [ABUSE] 			BOOLEAN DEFAULT 0,
        [CAPTION] 			TEXT,
        [BODY] 				TEXT,
        [CONTENT_FORMAT] 	TEXT DEFAULT 'plain'
    );
    
    CREATE INDEX EASYCMS_COMMENT_IDX_SID ON 			EASYCMS_COMMENT(SID);
    CREATE INDEX EASYCMS_COMMENT_IDX_CREATED ON 		EASYCMS_COMMENT(CREATED);
    CREATE INDEX EASYCMS_COMMENT_IDX_MODIFIED ON 		EASYCMS_COMMENT(MODIFIED);
    CREATE INDEX EASYCMS_COMMENT_IDX_MODIFY_USER_ID ON 	EASYCMS_COMMENT(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_COMMENT_IDX_OWNER_USER_ID ON 	EASYCMS_COMMENT(OWNER_USER_ID);
    CREATE INDEX EASYCMS_COMMENT_IDX_OWNER_GROUP_ID ON 	EASYCMS_COMMENT(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_COMMENT_IDX_R_USER ON 			EASYCMS_COMMENT(R_USER);
    CREATE INDEX EASYCMS_COMMENT_IDX_R_GROUP ON 		EASYCMS_COMMENT(R_GROUP);
    CREATE INDEX EASYCMS_COMMENT_IDX_R_ALL ON 			EASYCMS_COMMENT(R_ALL);
    CREATE INDEX EASYCMS_COMMENT_IDX_DELETED ON 		EASYCMS_COMMENT(DELETED);
    
    
    CREATE INDEX EASYCMS_COMMENT_IDX_VISIBLE ON 	EASYCMS_COMMENT(VISIBLE);
    CREATE INDEX EASYCMS_COMMENT_IDX_STICKY ON 		EASYCMS_COMMENT(STICKY);
    CREATE INDEX EASYCMS_COMMENT_IDX_ABUSE ON 		EASYCMS_COMMENT(ABUSE);
    CREATE INDEX EASYCMS_COMMENT_IDX_OBJECT_ID ON 	EASYCMS_COMMENT(OBJECT_ID);
    CREATE INDEX EASYCMS_COMMENT_IDX_OBJECT_TYPE ON EASYCMS_COMMENT(OBJECT_TYPE);
    CREATE INDEX EASYCMS_COMMENT_IDX_CAPTION ON 	EASYCMS_COMMENT(CAPTION);
	
-- END TABLE EASYCMS_COMMENT


-- BEGIN INTERNAL INDEX

CREATE TABLE EASYCMS_KEYWORD (
      [ID] 		INTEGER PRIMARY KEY,
      [WORD] 	TEXT, NOT NULL UNIQUE ON CONFLICT IGNORE
	  [L0] 		TEXT,
	  [L1] 		TEXT,
	  [L2] 		TEXT,
	  [L3] 		TEXT,
	  [L4] 		TEXT,
	  [L5] 		TEXT,
	  [L6] 		TEXT,
	  [L7] 		TEXT,
	  [LEN] 	INTEGER
    );
    CREATE INDEX EASYCMS_KEYWORD_IDX_WORD ON EASYCMS_KEYWORD(WORD);
	CREATE INDEX EASYCMS_KEYWORD_IDX_L0 ON EASYCMS_KEYWORD(L0);
	CREATE INDEX EASYCMS_KEYWORD_IDX_L1 ON EASYCMS_KEYWORD(L1);
	CREATE INDEX EASYCMS_KEYWORD_IDX_L2 ON EASYCMS_KEYWORD(L2);
	CREATE INDEX EASYCMS_KEYWORD_IDX_L3 ON EASYCMS_KEYWORD(L3);
	CREATE INDEX EASYCMS_KEYWORD_IDX_L4 ON EASYCMS_KEYWORD(L4);
	CREATE INDEX EASYCMS_KEYWORD_IDX_L5 ON EASYCMS_KEYWORD(L5);
	CREATE INDEX EASYCMS_KEYWORD_IDX_L6 ON EASYCMS_KEYWORD(L6);
	CREATE INDEX EASYCMS_KEYWORD_IDX_L7 ON EASYCMS_KEYWORD(L7);
    
    CREATE TABLE EASYCMS_OBJECT_KEYWORD (
      [OBJECT_ID] INTEGER NOT NULL ON CONFLICT IGNORE,
      [KEYWORD_ID] INTEGER NOT NULL ON CONFLICT IGNORE,
      UNIQUE(OBJECT_ID,KEYWORD_ID) ON CONFLICT REPLACE
    );    
    
    CREATE INDEX EASYCMS_OBJECT_KEYWORD_IDX_OBJECT_ID ON EASYCMS_OBJECT_KEYWORD(OBJECT_ID);
    CREATE INDEX OBJECT_KEYWORD_KEYWORD_ID ON EASYCMS_OBJECT_KEYWORD(KEYWORD_ID);

-- END INTERNAL INDEX

-- BEGIN TABLE EASYCMS_MESSAGE
	CREATE TABLE EASYCMS_MESSAGE (
        [ID]		 		INTEGER PRIMARY KEY,
        [CREATED] 			DATETIME,
        [MODIFIED] 			DATETIME,
        [MODIFY_USER_ID] 	INTEGER,
        [OWNER_USER_ID] 	INTEGER,
        [OWNER_GROUP_ID] 	INTEGER,
        [R_USER] 			INTEGER DEFAULT 7,
        [R_GROUP] 			INTEGER DEFAULT 3,
        [R_ALL] 			INTEGER DEFAULT 1,
        [DELETED] 			BOOLEAN DEFAULT 0,
    
        [SENT] 				DATETIME,
        [ISREAD] 			BOOLEAN DEFAULT 0,
        [TO_USER_ID] 		INTEGER,
        [TO_GROUP_ID] 		INTEGER,
        [SUBJECT] 			TEXT,
        [BODY] 				TEXT
    );
    
    CREATE INDEX EASYCMS_MESSAGE_IDX_ID ON EASYCMS_MESSAGE(ID);
    CREATE INDEX EASYCMS_MESSAGE_IDX_CREATED ON EASYCMS_MESSAGE(CREATED);
    CREATE INDEX EASYCMS_MESSAGE_IDX_MODIFIED ON EASYCMS_MESSAGE(MODIFIED);
    CREATE INDEX EASYCMS_MESSAGE_IDX_MODIFY_USER_ID ON EASYCMS_MESSAGE(MODIFY_USER_ID);
    CREATE INDEX EASYCMS_MESSAGE_IDX_OWNER_USER_ID ON EASYCMS_MESSAGE(OWNER_USER_ID);
    CREATE INDEX EASYCMS_MESSAGE_IDX_OWNER_GROUP_ID ON EASYCMS_MESSAGE(OWNER_GROUP_ID);
    CREATE INDEX EASYCMS_MESSAGE_IDX_R_USER ON EASYCMS_MESSAGE(R_USER);
    CREATE INDEX EASYCMS_MESSAGE_IDX_R_GROUP ON EASYCMS_MESSAGE(R_GROUP);
    CREATE INDEX EASYCMS_MESSAGE_IDX_R_ALL ON EASYCMS_MESSAGE(R_ALL);
    CREATE INDEX EASYCMS_MESSAGE_IDX_DELETED ON EASYCMS_MESSAGE(DELETED);
    
    
    CREATE INDEX EASYCMS_MESSAGE_IDX_TO_USER_ID ON EASYCMS_MESSAGE(TO_USER_ID);
    CREATE INDEX EASYCMS_MESSAGE_IDX_TO_CAPTION ON EASYCMS_MESSAGE(SUBJECT);
    CREATE INDEX EASYCMS_MESSAGE_IDX_SENT ON EASYCMS_MESSAGE(SENT);
    CREATE INDEX EASYCMS_MESSAGE_IDX_ISREAD ON EASYCMS_MESSAGE(ISREAD);

-- END TABLE EASYCMS_MESSAGE	