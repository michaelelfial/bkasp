-- WEB site multipurpose application schema - Dev name UniAPP

BEGIN TRANSACTION;
-- ****************************
-- DBVERSION

    CREATE TABLE DBVERSION ([VER] INTEGER);
    DELETE FROM DBVERSION;
    INSERT INTO DBVERSION ([VER]) VALUES (0);
    
-- ****************************    

-- ****************************
-- IPACTION
--    Anonymous IP actions - needed for global quotas

    CREATE TABLE IPACTION (
        [IP] TEXT NOT NULL,  -- IP of the client
        [PERFORMED] DATETIME,  -- time of the action
        [ACTION] TEXT NOT NULL,  -- Action name (in case different actions are logged)
        [REMOTE_HOST] TEXT, -- Host name if reported
        [UA] TEXT, -- user agent
        [HTTP_ACCEPT_LANGUAGE] TEXT, -- accepted languages by the client
        [ANONYMOUS_COOKIE] TEXT, -- anonymous cookie if any is assigned
        [ATTEMPTS] INTEGER DEFAULT 0, -- Like in the S_USER
        [LOCKED] BOOLEAN DEFAULT 0, -- locked out, clear pending
        [BLOCKED] BOOLEAN DEFAULT 0, -- Blocked by the admin
        UNIQUE([IP],[ACTION]) ON CONFLICT REPLACE
    );
    
    CREATE INDEX IPACTION_IDX_IP ON IPACTION(IP);
    CREATE INDEX IPACTION_IDX_PERFORMED ON IPACTION(PERFORMED);
    CREATE INDEX IPACTION_IDX_ACTION ON IPACTION(ACTION);
    CREATE INDEX IPACTION_IDX_REMOTE_HOST ON IPACTION(REMOTE_HOST);
    CREATE INDEX IPACTION_IDX_UA ON IPACTION(UA);
    CREATE INDEX IPACTION_IDX_ANONYMOUS_COOKIE ON IPACTION(ANONYMOUS_COOKIE);
    CREATE INDEX IPACTION_IDX_ATTEMPTS ON IPACTION(ATTEMPTS);

-- ****************************

-- ****************************
-- CONFIGURATION
--  Extend as needed

    CREATE TABLE CONFIGURATION (
        SID INTEGER NOT NULL DEFAULT 1, -- Not really SID - just to make the binder work
        SMTP_SERVER TEXT DEFAULT 'localhost',
        SMTP_FROM_EMAIL TEXT,
        SMTP_PORT INTEGER DEFAULT 25,
        SMTP_LOGIN TEXT,
        SMTP_PASS TEXT,
        DEFAULT_GROUP_ID INTEGER, -- new users register with this group
        IP_RESTRICTION INTEGER DEFAULT 5,
        REGISTRATION_DISABLED BOOLEAN DEFAULT 0
    );
    -- Initial configuration (on database creation only)
    INSERT INTO CONFIGURATION (SID) VALUES (1);

	CREATE TABLE CONTENT_CONFIGURATION (
        [CODE] TEXT NOT NULL,
        [MAIN_SID] INTEGER DEFAULT 0,
        [OBJECT_SID] INTEGER,
        UNIQUE(CODE,MAIN_SID) ON CONFLICT REPLACE
    );
    
    CREATE INDEX CONTENT_CONFIG_IDX_CODE ON CONTENT_CONFIGURATION(CODE);
    CREATE INDEX CONTENT_CONFIG_IDX_MAIN_SID ON CONTENT_CONFIGURATION(MAIN_SID);
	
-- ****************************

-- ****************************
-- table:SYS - System ID tracker (unique db wide ID-s)
    CREATE TABLE SYS(
        [ID] INTEGER PRIMARY KEY ,
        [UID] TEXT
    );
    CREATE INDEX SYS_IDX_UID ON SYS(UID);
    
-- ****************************    
    

-- USER

    CREATE TABLE USER (
      [ID] INTEGER PRIMARY KEY ,
      [SID] INTEGER UNIQUE ON CONFLICT FAIL,
      
      [LOGIN] TEXT UNIQUE ON CONFLICT FAIL,
      [PASS] TEXT,
      [LEVEL] INTEGER ,
      [EMAIL] TEXT UNIQUE ON CONFLICT FAIL,
      [GROUP_ID] INTEGER,
      [ATTEMPTED] DATETIME ,
      [FAILURES] INTEGER,
      [PERSON_SID] INTEGER,
      [DELETED] BOOLEAN DEFAULT 0,
      [HASHMETHOD] TEXT, -- If not null the password is hashed
      [CHANGEHASH] TEXT, -- If present a change password request is waiting
      [HINT] TEXT, -- password hint text
      [IP] TEXT,
      [LANGUAGE] TEXT,
      [COMMENT] TEXT -- Text usually filled during the initial registration
   );

   CREATE INDEX USER_IDX_LOGIN ON USER(LOGIN);
   CREATE INDEX USER_IDX_EMAIL ON USER(EMAIL);
   CREATE INDEX USER_IDX_GROUP_ID ON USER(GROUP_ID);
   CREATE INDEX USER_IDX_PERSON_SID ON USER(PERSON_SID);
   CREATE INDEX USER_IDX_CHANGEHASH ON USER(CHANGEHASH);
   CREATE INDEX USER_IDX_DELETED ON USER(DELETED);
   CREATE INDEX USER_IDX_IP ON USER(IP);
   CREATE INDEX USER_IDX_LANGUAGE ON USER(LANGUAGE);
   
   -- ****************************

    -- ************* USER_ACCESSDEFAULTS
   
           CREATE TABLE USER_ACCESSDEFAULTS (
                USER_ID INTEGER NOT NULL UNIQUE ON CONFLICT REPLACE,
                R_USER INTEGER DEFAULT 31,
                R_GROUP INTEGER DEFAULT 3,
                R_ALL INTEGER DEFAULT 1
           );
        
-- ****************************
-- table: S_GROUP
    CREATE TABLE S_GROUP (
        [ID] INTEGER PRIMARY KEY,
        [SID] INTEGER NOT NULL,
        [NAME] TEXT,
        [CODE] TEXT,
        [DESCRIPTION] TEXT,
        [DELETED] BOOLEAN DEFAULT 0,
        [CANLOGIN] BOOLEAN DEFAULT 0
    );
    
    CREATE INDEX S_GROUP_IDX_NAME ON S_GROUP(NAME);
    CREATE INDEX S_GROUP_IDX_CODE ON S_GROUP(CODE);
    CREATE INDEX S_GROUP_IDX_DELETED ON S_GROUP(DELETED);
    CREATE INDEX S_GROUP_IDX_CANLOGIN ON S_GROUP(CANLOGIN);

-- ****************************
-- Initial entries

    INSERT INTO SYS (ID, UID) VALUES (1,"0000000000000001"); -- user root
    INSERT INTO SYS (ID, UID) VALUES (2,"0000000000000002"); -- group Administrators
    INSERT INTO S_GROUP (ID,SID,NAME,DESCRIPTION,CODE,CANLOGIN) VALUES (1,2,'Administrators','Application administrators','ADMINS',-1);
    INSERT INTO USER (ID,SID,LOGIN,PASS,LEVEL,EMAIL,GROUP_ID,ATTEMPTED,FAILURES,PERSON_SID) VALUES
                       (1,1,'root','letmein',100,'root@localhost',1,OleSysTime(),0,NULL);
    
-- ****************************    

-- table:PERSON
    CREATE TABLE PERSON (
        [SID] INTEGER NOT NULL,
        [CREATED] DATETIME,
        [MODIFIED] DATETIME,
        [MODIFY_USER_ID] INTEGER,
        [OWNER_USER_ID] INTEGER,
        [OWNER_GROUP_ID] INTEGER,
        [R_USER] INTEGER DEFAULT 7,
        [R_GROUP] INTEGER DEFAULT 3,
        [R_ALL] INTEGER DEFAULT 1,
        [DELETED] BOOLEAN DEFAULT 0,
        [CHANGED] BOOLEAN DEFAULT -1,
        [LANGUAGE] TEXT NOT NULL,
        
        [ISENTITY] BOOLEAN DEFAULT -1, -- If true NAME1 is used only
        [NAME1] TEXT,
        [NAME2] TEXT,
        [NAME3] TEXT,
        [TITLE] TEXT,
        [CONTENT_FORMAT] TEXT DEFAULT 'bbcode',
        [COMMENT] TEXT,
        [KEYWORDS] TEXT,
        [NUM] TEXT, -- Personal number (EGN etc.)
        [BORN] DATETIME, -- Date born
        [ALLOW_MAIL] BOOLEAN DEFAULT 0, -- Allow the user to be mailed from the site and make the information public (if permitted otherwise)
        [IMAGE_SID] INTEGER,        
        [FILE_SID] INTEGER,        
        [EMAIL] TEXT,
        [PHONE] TEXT,
        [PHONE2] TEXT,
        [LONGITUDE] DOUBLE,
        [LATITUDE] DOUBLE,
        [WEBSITE] TEXT,
        [LOCATION_SID] INTEGER,
        [ADDRESS] TEXT,
        [WORKINGHOURS] TEXT,
        [CATEGORY_SID] INTEGER, -- Catevory type - PERSON
        [CATEGORY2_SID] INTEGER, -- Catevory type - PERSON (second category)
        PRIMARY KEY (SID, LANGUAGE) ON CONFLICT REPLACE 
    );

    CREATE INDEX PERSON_IDX_CREATED ON PERSON(CREATED);
    CREATE INDEX PERSON_IDX_MODIFIED ON PERSON(MODIFIED);
    CREATE INDEX PERSON_IDX_MODIFY_USER_ID ON PERSON(MODIFY_USER_ID);
    CREATE INDEX PERSON_IDX_OWNER_USER_ID ON PERSON(OWNER_USER_ID);
    CREATE INDEX PERSON_IDX_OWNER_GROUP_ID ON PERSON(OWNER_GROUP_ID);
    CREATE INDEX PERSON_IDX_R_USER ON PERSON(R_USER);
    CREATE INDEX PERSON_IDX_R_GROUP ON PERSON(R_GROUP);
    CREATE INDEX PERSON_IDX_R_ALL ON PERSON(R_ALL);
    CREATE INDEX PERSON_IDX_DELETED ON PERSON(DELETED);
    CREATE INDEX PERSON_IDX_CHANGED ON PERSON(CHANGED);
    CREATE INDEX PERSON_IDX_LANGUAGE ON PERSON(LANGUAGE);
    
    CREATE INDEX PERSON_IDX_NAME1 ON PERSON(NAME1);
    CREATE INDEX PERSON_IDX_NAME2 ON PERSON(NAME2);
    CREATE INDEX PERSON_IDX_NAME3 ON PERSON(NAME3);
    CREATE INDEX PERSON_IDX_TITLE ON PERSON(TITLE);
    CREATE INDEX PERSON_IDX_IMAGE_SID ON PERSON(IMAGE_SID);
    CREATE INDEX PERSON_IDX_FILE_SID ON PERSON(FILE_SID);
    CREATE INDEX PERSON_IDX_EMAIL ON PERSON(EMAIL);
    CREATE INDEX PERSON_IDX_PHONE ON PERSON(PHONE);
    CREATE INDEX PERSON_IDX_PHONE2 ON PERSON(PHONE2);
    CREATE INDEX PERSON_IDX_CATEGORY_SID ON PERSON(CATEGORY_SID);
    CREATE INDEX PERSON_IDX_CATEGORY2_SID ON PERSON(CATEGORY2_SID);
    CREATE INDEX PERSON_IDX_LOCATION_SID ON PERSON(LOCATION_SID);
    CREATE INDEX PERSON_IDX_LATITUDE ON PERSON(LATITUDE);
    CREATE INDEX PERSON_IDX_LONGITUDE ON PERSON(LONGITUDE);
    CREATE INDEX PERSON_IDX_WEBSITE ON PERSON(WEBSITE);

-- ****************************


-- ****************************
-- Images and files

-- table: IMAGE_TYPE

    CREATE TABLE IMAGE_TYPE (
      [SID] INTEGER NOT NULL,
      [CREATED] DATETIME,
      [MODIFIED] DATETIME,
      [MODIFY_USER_ID] INTEGER,
      [OWNER_USER_ID] INTEGER,
      [OWNER_GROUP_ID] INTEGER,
      [R_USER] INTEGER DEFAULT 7,
      [R_GROUP] INTEGER DEFAULT 3,
      [R_ALL] INTEGER DEFAULT 3,
      [DELETED] BOOLEAN DEFAULT 0,
      [CHANGED] BOOLEAN DEFAULT -1,
      [LANGUAGE] TEXT NOT NULL,
      
      [CODE] TEXT,
      [CAPTION] TEXT,
      [WIDTH] INTEGER, -- Width limitation
      [HEIGHT] INTEGER, -- Height limitation
      [QUALITY] INTEGER, -- Quality of compression (if applicable - hardcoded)
      [CONTENT_TYPE] TEXT, -- Store content types
      [FILE_EXTENSION] TEXT, -- The file extension of the file in the store
      PRIMARY KEY (SID, LANGUAGE) ON CONFLICT REPLACE
    );
    
    CREATE INDEX IMAGE_TYPE_IDX_SID ON IMAGE_TYPE(SID);
    CREATE INDEX IMAGE_TYPE_IDX_CREATED ON IMAGE_TYPE(CREATED);
    CREATE INDEX IMAGE_TYPE_IDX_MODIFIED ON IMAGE_TYPE(MODIFIED);
    CREATE INDEX IMAGE_TYPE_IDX_MODIFY_USER_ID ON IMAGE_TYPE(MODIFY_USER_ID);
    CREATE INDEX IMAGE_TYPE_IDX_OWNER_USER_ID ON IMAGE_TYPE(OWNER_USER_ID);
    CREATE INDEX IMAGE_TYPE_IDX_OWNER_GROUP_ID ON IMAGE_TYPE(OWNER_GROUP_ID);
    CREATE INDEX IMAGE_TYPE_IDX_R_USER ON IMAGE_TYPE(R_USER);
    CREATE INDEX IMAGE_TYPE_IDX_R_GROUP ON IMAGE_TYPE(R_GROUP);
    CREATE INDEX IMAGE_TYPE_IDX_R_ALL ON IMAGE_TYPE(R_ALL);
    CREATE INDEX IMAGE_TYPE_IDX_DELETED ON IMAGE_TYPE(DELETED);
    CREATE INDEX IMAGE_TYPE_IDX_CHANGED ON IMAGE_TYPE(CHANGED);
    CREATE INDEX IMAGE_TYPE_IDX_LANGUAGE ON IMAGE_TYPE(LANGUAGE);
    
    CREATE INDEX IMAGE_TYPE_IDX_CODE ON IMAGE_TYPE(CODE);
    CREATE INDEX IMAGE_TYPE_IDX_NAME ON IMAGE_TYPE(CAPTION);
    
-- table:IMAGE
    CREATE TABLE IMAGE (
        [SID] INTEGER NOT NULL,
        [CREATED] DATETIME,
        [MODIFIED] DATETIME,
        [MODIFY_USER_ID] INTEGER,
        [OWNER_USER_ID] INTEGER,
        [OWNER_GROUP_ID] INTEGER,
        [R_USER] INTEGER DEFAULT 7,
        [R_GROUP] INTEGER DEFAULT 3,
        [R_ALL] INTEGER DEFAULT 1,
        [DELETED] BOOLEAN DEFAULT 0,
        [CHANGED] BOOLEAN DEFAULT -1,
        [LANGUAGE] TEXT NOT NULL,
        
        [CAPTION] TEXT ,
        [KEYWORDS] TEXT ,
        [CONTENT_TYPE] TEXT ,
        [WIDTH] INTEGER ,
        [HEIGHT] INTEGER ,
        [PATH] TEXT,
        [IMAGE_TYPE_SID] INTEGER,
        [BODY] TEXT, -- Description
        [LATITUDE] DOUBLE,
        [LONGITUDE] DOUBLE,
        PRIMARY KEY (SID, LANGUAGE) ON CONFLICT REPLACE
    );
    
    CREATE INDEX IMAGE_IDX_SID ON IMAGE(SID);
    CREATE INDEX IMAGE_IDX_CREATED ON IMAGE(CREATED);
    CREATE INDEX IMAGE_IDX_MODIFIED ON IMAGE(MODIFIED);
    CREATE INDEX IMAGE_IDX_MODIFY_USER_ID ON IMAGE(MODIFY_USER_ID);
    CREATE INDEX IMAGE_IDX_OWNER_USER_ID ON IMAGE(OWNER_USER_ID);
    CREATE INDEX IMAGE_IDX_OWNER_GROUP_ID ON IMAGE(OWNER_GROUP_ID);
    CREATE INDEX IMAGE_IDX_R_USER ON IMAGE(R_USER);
    CREATE INDEX IMAGE_IDX_R_GROUP ON IMAGE(R_GROUP);
    CREATE INDEX IMAGE_IDX_R_ALL ON IMAGE(R_ALL);
    CREATE INDEX IMAGE_IDX_DELETED ON IMAGE(DELETED);
    CREATE INDEX IMAGE_IDX_CHANGED ON IMAGE(CHANGED);
    CREATE INDEX IMAGE_IDX_LANGUAGE ON IMAGE(LANGUAGE);
    
    CREATE INDEX IMAGE_IDX_NAME ON IMAGE(CAPTION);
    CREATE INDEX IMAGE_IDX_CONTENT_TYPE ON IMAGE(CONTENT_TYPE);
    CREATE INDEX IMAGE_IDX_WIDTH ON IMAGE(WIDTH);
    CREATE INDEX IMAGE_IDX_HEIGHT ON IMAGE(HEIGHT);
    CREATE INDEX IMAGE_IDX_IMAGE_TYPE_SID ON IMAGE(IMAGE_TYPE_SID);
    
-- table:FILE

    CREATE TABLE FILE (
      [SID] INTEGER NOT NULL,
        [CREATED] DATETIME,
        [MODIFIED] DATETIME,
        [MODIFY_USER_ID] INTEGER,
        [OWNER_USER_ID] INTEGER,
        [OWNER_GROUP_ID] INTEGER,
        [R_USER] INTEGER DEFAULT 7,
        [R_GROUP] INTEGER DEFAULT 3,
        [R_ALL] INTEGER DEFAULT 1,
        [DELETED] BOOLEAN DEFAULT 0,
        [CHANGED] BOOLEAN DEFAULT -1,
        [LANGUAGE] TEXT NOT NULL,
      
      [SIZE] INTEGER, -- size in bytes
      [CONTENT_TYPE] TEXT,
      [PATH] TEXT,
      [FILE_NAME] TEXT,
      [CAPTION] TEXT,
      [BODY] TEXT, -- Description
      PRIMARY KEY (SID, LANGUAGE) ON CONFLICT REPLACE
    );
    CREATE INDEX FILE_IDX_LANGUAGE ON FILE(LANGUAGE);
    CREATE INDEX FILE_IDX_CREATED ON FILE(CREATED);
    CREATE INDEX FILE_IDX_MODIFIED ON FILE(MODIFIED);
    CREATE INDEX FILE_IDX_MODIFY_USER_ID ON FILE(MODIFY_USER_ID);
    CREATE INDEX FILE_IDX_OWNER_USER_ID ON FILE(OWNER_USER_ID);
    CREATE INDEX FILE_IDX_OWNER_GROUP_ID ON FILE(OWNER_GROUP_ID);
    CREATE INDEX FILE_IDX_R_USER ON FILE(R_USER);
    CREATE INDEX FILE_IDX_R_GROUP ON FILE(R_GROUP);
    CREATE INDEX FILE_IDX_R_ALL ON FILE(R_ALL);
    CREATE INDEX FILE_IDX_DELETED ON FILE(DELETED);
    CREATE INDEX FILE_IDX_CHANGED ON FILE(CHANGED);
    
    CREATE INDEX FILE_IDX_FILE_NAME ON FILE(FILE_NAME);
    CREATE INDEX FILE_IDX_SIZE ON FILE(SIZE);
    CREATE INDEX FILE_IDX_CAPTION ON FILE(CAPTION);
    CREATE INDEX FILE_IDX_CONTENT_TYPE ON FILE(CONTENT_TYPE);    

-- ****************************    
    

-- ****************************
-- Indexing    
-- Various    
    
    CREATE TABLE KEYWORD (
      [ID] INTEGER PRIMARY KEY,
      [WORD] TEXT NOT NULL UNIQUE ON CONFLICT IGNORE
    );
    CREATE INDEX KEYWORD_IDX_WORD ON KEYWORD(WORD);
    
    CREATE TABLE OBJECT_KEYWORD (
      [OBJECT_SID] INTEGER NOT NULL ON CONFLICT IGNORE,
      [KEYWORD_ID] INTEGER NOT NULL ON CONFLICT IGNORE,
      UNIQUE(OBJECT_SID,KEYWORD_ID) ON CONFLICT REPLACE
    );    
    
    CREATE INDEX OBJECT_KEYWORD_IDX_OBJECT_SID ON OBJECT_KEYWORD(OBJECT_SID);
    CREATE INDEX OBJECT_KEYWORD_KEYWORD_ID ON OBJECT_KEYWORD(KEYWORD_ID);
    
    -- Relations db item -- related to --> other item
    -- For instance attachments go file->item, image->item
    CREATE TABLE RELATION (
        [OBJECT_SID] INTEGER NOT NULL, -- Attach to this object
        [TARGET_SID] INTEGER NOT NULL, -- SID of the attached item
        [ORDER_TAG] INTEGER DEFAULT 0, -- Order in lists
        [OBJECT_TYPE] TEXT NOT NULL,   -- Kind of attachment 'IMAGE', 'FILE', etc. (should be target_type, but ...)
        UNIQUE(OBJECT_SID,TARGET_SID) ON CONFLICT REPLACE
    );
    CREATE INDEX RELATION_IDX_OBJECT_TYPE ON RELATION(OBJECT_TYPE);
    CREATE INDEX RELATION_IDX_ORDER_TAG ON RELATION(ORDER_TAG);
    CREATE INDEX RELATION_IDX_OBJECT_SID ON RELATION(OBJECT_SID);
    CREATE INDEX RELATION_IDX_TARGET_SID ON RELATION(TARGET_SID);
    
-- ****************************

COMMIT TRANSACTION;


